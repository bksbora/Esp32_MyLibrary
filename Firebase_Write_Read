#include <Arduino.h>
#if defined(ESP32)
#include <WiFi.h>
#elif defined(ESP8266)
#include <ESP8266WiFi.h>
#endif
#include <Firebase_ESP_Client.h>

// Veritabanına düzgün bağlanmak için gerekli olan ilaveler
#include "addons/TokenHelper.h"
#include "addons/RTDBHelper.h"

// Ağ bilgilerinizi girin
#define WIFI_SSID "****"
#define WIFI_PASSWORD "*****"

// Firebase proje API Key'i girin
#define API_KEY "AIzaSyC-FVMnqUyAyAPlAPNGfnc_-FWp-I4c56U"

// Veritabanı URL'sini girin */
#define DATABASE_URL "https://esp32connect-b70d2-default-rtdb.europe-west1.firebasedatabase.app/"

// Bir Firebase veri objesi oluşturalım
FirebaseData fbdo;
// yetki ve ayar nesneleri oluşturalım
FirebaseAuth auth;
FirebaseConfig config;
// gerekli değişken tanımları
unsigned long sendDataPrevMillis = 0;
unsigned long getDataPrevMillis = 0;
int count = 1;
bool signupOK = false;
int intValue = 0;

void setup()
{
  Serial.begin(115200);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Ağa bağlanıyor");
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("Bağlandı. IP Adresi: ");
  Serial.println(WiFi.localIP());
  Serial.println();

  /* yukarıdaki API keyi ayarlara atayalım */
  config.api_key = API_KEY;

  /* veritabanı URL'sini ayarlara atayalım */
  config.database_url = DATABASE_URL;

  /* giriş yapalım */
  if (Firebase.signUp(&config, &auth, "", ""))
  {
    Serial.println("ok");
    signupOK = true;
  }
  else
  {
    Serial.printf("%s\n", config.signer.signupError.message.c_str());
  }

  /* token'in geçerlilik durumu kontrolü için gerekli */
  config.token_status_callback = tokenStatusCallback;
  // bağlantıyı başlatalım
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);
  // pin durumları

  digitalWrite(LED_BUILTIN, LOW);
}

void loop()
{
  // veritabanındaki  test/int  tablo/veri hücresine veri yazalım
  if (Firebase.ready() && signupOK && (millis() - sendDataPrevMillis > 15000 || sendDataPrevMillis == 0))
  {
    sendDataPrevMillis = millis();

    if (Firebase.RTDB.setInt(&fbdo, "test/int", count))
    {
      Serial.println("YAZMA TAMAM");
      Serial.println("DİZİN: ");
      Serial.println(fbdo.dataPath());
      Serial.println("VERİ TİPİ: ");
      Serial.println(fbdo.dataType());
    }
    else
    {
      Serial.println("HATA");
      Serial.println("HATA SEBEBİ: ");
      Serial.println(fbdo.errorReason());
    }
    count++;
  }
  // veritabanındaki  test/int  tablo/veri hücresindeki veriyi okuyalım
  if (Firebase.ready() && signupOK && (millis() - getDataPrevMillis > 16000 || getDataPrevMillis == 0))
  {
    getDataPrevMillis = millis();
    if (Firebase.RTDB.getInt(&fbdo, "/test/int"))
    {
      if (fbdo.dataType() == "int")
      { // gelen veri int mi kontrol ediyoruz
        intValue = fbdo.intData();
        Serial.println(intValue);
      }
    }
    else
    {
      Serial.println(fbdo.errorReason());
    }
    const int BLUE_LED_PIN = 2;
    // okuduğumuz değer çift ise kırmızı, tek ise yeşil ledi yakalım
    int mod = intValue % 2;
    if (mod == 0)
    {
      pinMode(BLUE_LED_PIN, OUTPUT);
      digitalWrite(LED_BUILTIN, HIGH);
    }
    else
    {
      digitalWrite(LED_BUILTIN, LOW);
    }
  }
}
